{"version":3,"sources":["layouts/Siderbar.js","routers/router.js","screens/home/index.js","utils/getDate.js","utils/initState.js","utils/storage.js","components/Tables/AntTable.js","utils/mapTitle.js","components/Common/CommonListComponent.js","screens/employees/EmployeeList.js","components/Forms/AntFormEmployee.js","screens/employees/EmployeeAdd.js","screens/customers/CustomerList.js","components/Forms/AntFormCustomer.js","screens/customers/CustomerAdd.js","screens/vendors/VendorList.js","components/Forms/AntFormVendor.js","screens/vendors/VendorAdd.js","components/Forms/AntFormPayEmployee.js","screens/pay/PayEmployee.js","screens/pay/Payroll.js","screens/inventory/Inventory.js","components/Forms/AntFormCreateInvoice.js","screens/invoice/CreatInvoice.js","screens/invoice/InvoiceHistory.js","components/Forms/AntFormCreatePO.js","screens/purchase/PO.js","screens/purchase/POHistory.js","components/Tables/IncomeStatementTable.js","screens/incomestatement/IncomeStatement.js","components/Tables/BalanceSheetTable.js","screens/balanceSheet/BalanceSheet.js","App.js","index.js"],"names":["Header","Layout","Content","Sider","Footer","SubMenu","Menu","Siderbar","state","collapsed","onCollapse","console","log","handleRouter","routerName","props","history","push","handleClearData","e","localStorage","clear","style","minHeight","collapsible","this","type","onClick","id","AccountBookTwoTone","theme","defaultSelectedKeys","mode","key","icon","RobotOutlined","title","Item","UserOutlined","ContactsOutlined","DollarOutlined","DesktopOutlined","TeamOutlined","AlipayCircleOutlined","danger","href","className","padding","margin","contents","React","Component","withRouter","Home","getDate","date","Date","dd","mm","getMonth","y","getFullYear","defaultValue","employees","data","customers","address1","address2","city","companyName","firstName","lastName","price","zipCode","vendors","part","priceUnit","payroll","inventory","quantity","value","expenses","payrollWithholding","bills","annualExpenses","income","otherIncome","operatingIncome","incomeTax","assets","cash","accountsReceivable","buildings","equipment","furniture","liabilites","accountsPayable","notesPayable","accruals","invoiceHistory","POHistory","currData","updateLocal","setItem","JSON","stringify","parse","getItem","dir","getEmployee","getCustomers","getVendors","addPayroll","employee","calculatePay","salary","withholding","dispusement","parseInt","updateCash","updateExpenses","payrollHistory","getPayroll","money","name","getInventory","calculateInventoryValue","forEach","makeInvoiceByCustomer","customer","number","invoiceNumber","length","total","updateAccountsReceivable","updateInventory","checkInventory","inventoryData","getInvoice","getPOHistory","checkPO","makePOByVenor","vendor","PONumber","supplier","updateAccountsPayable","updateInventoryByPO","getIncome","sales","COGS","calculateCOGS","grossProfit","totalExpenses","netIncome","invoice","getBalanceSheet","reduce","acc","cur","totalCurrenAssets","land","totalFixAssets","totalAssets","totalCurrentLiabilities","totalLiabilities","mortage","totalLongTermDebt","netWorth","AntTable","columns","col","dataSource","mapTitle","ssn","steel","wood","CommonListComponent","getDisplayData","pageName","useState","displayData","setDisplayData","useEffect","Object","keys","filter","map","dataIndex","setCol","EmployeeList","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","range","AntForm","reset","useRef","onFinish","values","user","uniqid","current","resetFields","labelAlign","ref","label","rules","len","maxLength","offset","htmlType","EmployeeAdd","CustomerList","CustomerAdd","VendorList","Options","Option","formItems","items","item","VendorAdd","arrayName","generateItems","find","payByID","PayEmployee","Payroll","Inventory","cutomers","cutomer","Error","creatInvoice","CreatInvoice","InvoiceHistory","creatPO","PO","Typography","Text","createColumns","render","text","align","IncomeStatementTable","data1","data2","data3","data4","pagination","bordered","IncomeStatement","BalanceSheetTable","data5","data6","data7","BalanceSheet","App","currContents","path","exact","component","Invoice","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1694eb81.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'\nimport './Siderbar.css'\n\nimport * as RouterName from '../routers/router'\n\nimport { Layout, Menu, Breadcrumb, Button } from 'antd';\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  AccountBookTwoTone,\n  RobotOutlined,\n  ContactsOutlined,\n  DollarOutlined,\n  AlipayCircleOutlined,\n} from '@ant-design/icons';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass Siderbar extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    // this.setState({ collapsed });\n  };\n  \n  handleRouter = (routerName) => {\n    return () => {\n      this.props.history.push(`${routerName}`) \n    }\n  }\n\n  handleClearData = (e) => { \n    localStorage.clear() \n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n          <Button type=\"primary\" onClick={this.handleRouter(RouterName.Home)} id='btn-home'>\n            <AccountBookTwoTone id='icon-home'/> Book-Keeper\n          </Button>\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            <SubMenu key=\"sub0\" icon={<RobotOutlined />} title=\"Employees\">\n              <Menu.Item key=\"11\" onClick={this.handleRouter(RouterName.EmployeeList)}>List Employees</Menu.Item>\n              <Menu.Item key=\"12\" onClick={this.handleRouter(RouterName.EmployeeAdd)}>Add Employee</Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Customers\">\n              <Menu.Item key=\"21\" onClick={this.handleRouter(RouterName.CustomerList)}>List Customers</Menu.Item>\n              <Menu.Item key=\"22\" onClick={this.handleRouter(RouterName.CustomerAdd)}>Add Customer</Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"sub3\" icon={<ContactsOutlined />} title=\"Vendors\">\n              <Menu.Item key=\"31\" onClick={this.handleRouter(RouterName.VendorList)}>List Vendors</Menu.Item>\n              <Menu.Item key=\"32\" onClick={this.handleRouter(RouterName.VendorAdd)}>Add Vendor</Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"sub4\" icon={<DollarOutlined />} title=\"Pay\">\n              <Menu.Item key=\"41\" onClick={this.handleRouter(RouterName.PayEmployee)}>Pay Employee</Menu.Item>\n              <Menu.Item key=\"42\" onClick={this.handleRouter(RouterName.Payroll)}>Payroll</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"test\" icon={<DesktopOutlined />} onClick={this.handleRouter(RouterName.Inventory)}>\n              Inventory\n            </Menu.Item>\n            <SubMenu key=\"sub5\" icon={<TeamOutlined />} title=\"Invoice\">\n              <Menu.Item key=\"51\" onClick={this.handleRouter(RouterName.Invoice)}>Create Invoice</Menu.Item>\n              <Menu.Item key=\"52\" onClick={this.handleRouter(RouterName.InvoiceHistory)}>Invoice History</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub6\" icon={<AlipayCircleOutlined />} title=\"PO\">\n              <Menu.Item key=\"61\" onClick={this.handleRouter(RouterName.PO)}>Create PO</Menu.Item>\n              <Menu.Item key=\"62\" onClick={this.handleRouter(RouterName.POHistory)}>PO History</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />} onClick={this.handleRouter(RouterName.IncomeStatement)}>\n              Income Statement\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<DesktopOutlined />} onClick={this.handleRouter(RouterName.BalanceSheet)}>\n              Balance Sheet\n            </Menu.Item>\n            <Menu.Item key=\"9\" title=\"\" onClick={this.handleClearData} id=\"btn-clear\" >\n              <Button type='primary' danger href='https://law-chain-hot.github.io/TE-book-keeper/' id='btn-restore-data'>Restore Default Value</Button>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n          <Content style={{ margin: '0 16px' }}>\n            {this.props.contents}\n          </Content>\n          {/* <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer> */}\n        </Layout>\n      </Layout>\n    );\n  }\n}\nexport default withRouter(Siderbar)\n","export const Home = '/'\nexport const EmployeeList = \"/employeelist\"\nexport const EmployeeAdd = \"/employeeadd\"\nexport const CustomerList = \"/customerlist\"\nexport const CustomerAdd = \"/customeradd\"\nexport const VendorList = \"/vendorlist\"\nexport const VendorAdd = \"/vendoradd\"\nexport const PayEmployee = \"/payemployee\"\nexport const Payroll = \"/payroll\"\nexport const Inventory = \"/inventory\"\nexport const Invoice = \"/invoice\"\nexport const InvoiceHistory = \"/invoicehistory\"\nexport const PO = \"/po\"\nexport const POHistory = \"/pohistory\"\nexport const IncomeStatement = \"/incomestatement\"\nexport const BalanceSheet = \"/balancesheet\"\n\n\n\n\n\n\n ","import React, { useState, useEffect } from 'react'\nimport './home-container.css'\n\n\n\nconst Home = function () {\n\n    return (\n        <div className='home-container'>\n            <h1>Welcome to TE-book-keeper!</h1>\n            <h3>Using it by clicking the sidebar! Have fun :)</h3>\n        </div>\n    )\n}\n\nexport default Home","const getDate = () => {\n    const date = new Date()\n    const dd = date.getDate();\n    const mm = date.getMonth();\n    const y = date.getFullYear();\n    return `${mm}/${dd}/${y}`\n}\n\nexport default getDate\n","let defaultValue = {\n  employees: {\n    data: [\n      // {\n      // firstName: \"123\",\n      // lastName: \"123\",\n      // address1: \"123\",\n      // address2: \"123\",\n      // city: \"123\",\n      // salary: \"123\",\n      // ssn: \"123123123\",\n      // state: \"123\",\n      // withholding: \"3123\",\n      // zipCode: \"123\",\n      // }\n    ],\n  },\n\n  customers: {\n    data: [\n      {\n        address1: 'E John St',\n        address2: '3001',\n        city: 'Chicago',\n        companyName: 'Daniel Co.',\n        firstName: 'Daniel',\n        id: 'kg1jmob3',\n        lastName: 'Lilly',\n        price: '30',\n        state: 'IL',\n        zipCode: '60007',\n      },\n    ],\n  },\n\n  vendors: {\n    data: [\n      {\n        address1: '310 Haskell',\n        address2: '001',\n        city: 'Chicago',\n        companyName: 'Steel Co.',\n        id: 'kg1jo5kl',\n        part: 'Steel',\n        priceUnit: '1',\n        state: 'IL',\n        zipCode: '60001',\n      },\n      {\n        address1: '1003 Green',\n        address2: '301',\n        city: 'Champaign',\n        companyName: 'Wood Co.',\n        id: 'kg1jpdzc',\n        part: 'Wood',\n        priceUnit: '15',\n        state: 'IL',\n        zipCode: '61820',\n      },\n    ],\n  },\n\n  payroll: {\n    data: [\n      // each history\n    ],\n  },\n\n  inventory: {\n    data: [\n      {\n        part: 'Steel',\n        priceUnit: 1,\n        quantity: 10000,\n        value: 0,\n      },\n      {\n        part: 'Wood',\n        priceUnit: 15,\n        quantity: 2000,\n        value: 0,\n      },\n    ],\n  },\n\n  expenses: {\n    payroll: 0,\n    payrollWithholding: 0,\n    bills: 0,\n    annualExpenses: 10000,\n  },\n\n  income: {\n    otherIncome: 0,\n    operatingIncome: 0,\n    incomeTax: 0,\n  },\n\n  assets: {\n    cash: 100000,\n    accountsReceivable: 0,\n    inventory: 0,\n    buildings: 100000, // no change\n    equipment: 10000, // no change\n    furniture: 10000, // no change\n  },\n\n  liabilites: {\n    accountsPayable: 0,\n    notesPayable: 0,\n    accruals: 0,\n  },\n\n  invoiceHistory: {\n    data: [],\n  },\n\n  POHistory: {\n    data: [],\n  },\n}\n\n\n\nexport default defaultValue","import getDate from './getDate'\n\nimport defaultValue from './initState'\n\nlet currData = null\n\n\n\n\n\n\n\n\n\nconst updateLocal = () => {\n  localStorage.setItem('localData', JSON.stringify(currData))\n  let data = JSON.parse(localStorage.getItem('localData'))\n  // debug\n  console.log('Successfully update the localStorage, current localData is:', data)\n  console.dir(data)\n}\n\nexport const getDataFromLocal = () => {\n  currData = JSON.parse(localStorage.getItem('localData')) || defaultValue\n  console.log(\"getDataFromLocal -> datcurrDataa\", currData)\n  // currData.employees.data.splice(1,1)\n  // updateLocal()\n}\n\n\n\n// Employee\nexport const addEmployee = (employee) => {\n  currData.employees.data.push(employee)\n  updateLocal()\n}\n\nexport const getEmployee = () => {\n  return currData.employees.data\n}\n\n\n\n\n// Customer\nexport const addCustomer = (customer) => {\n  currData.customers.data.push(customer)\n  updateLocal()\n}\n\nexport const getCustomers = () => {\n  return currData.customers.data\n}\n\n\n\n\n// Vendor\nexport const addVendor = (vendor) => {\n  currData.vendors.data.push(vendor)\n  updateLocal()\n}\n\nexport const getVendors = () => {\n  return currData.vendors.data\n}\n\n\n\n\n// Pay\nexport const payByID = (id) => {\n  const employee = currData.employees.data.find(employee => employee.id === id)\n  addPayroll(employee)\n  updateLocal()\n}\n\nexport const addPayroll = (employee) => {\n  const [salary, withholding, dispusement] = calculatePay(employee)\n  // console.log(parseInt(employee.withholding), parseInt(withholding))\n  employee.withholding = parseInt(employee.withholding) + parseInt(withholding) // update the employee's withholding\n  updateCash(-salary)\n  updateExpenses('payroll', dispusement)\n  updateExpenses('payrollWithholding', withholding)\n  const payrollHistory = {\n    date: getDate(),\n    employee: `${employee.firstName} ${employee.lastName}`,\n    salary: salary,\n    withholding: withholding,\n    dispusement: dispusement,\n  }\n  currData.payroll.data.push(payrollHistory)\n}\n\nexport const calculatePay = (employee) => {\n  return [employee.salary, employee.salary * 0.2, employee.salary * 0.8]\n}\n\nexport const getPayroll = () => {\n  return currData.payroll.data\n}\n\n\n\n\n// Cash\nconst updateCash = (money) => {\n  currData.assets.cash += money\n  updateLocal()\n}\n\n\n\n\n// expenses\nconst updateExpenses = (name, money) => {\n  currData.expenses[name] += money\n  updateLocal()\n}\n\n\n\n// get inventory\nexport const getInventory = () => {\n  calculateInventoryValue(currData.inventory.data)\n  updateLocal()\n  return currData.inventory.data\n}\n\nconst calculateInventoryValue = (inventory) => {\n  inventory.forEach(part => {\n    part.value = part.priceUnit * part.quantity\n  })\n}\n\n\n\n\n// invoice\nexport const creatInvoice = ({ id, number }) => {\n  const customer = currData.customers.data.find(employee => employee.id === id)\n  if (checkInventory(number)) {\n    makeInvoiceByCustomer(customer, number)\n    updateLocal()\n  } else {\n    throw new Error('You do not have enough inventory')\n  }\n}\n\nconst makeInvoiceByCustomer = (customer, number) => {\n  const value = customer.price * number\n  const invoiceHistory = {\n    invoiceNumber: currData.invoiceHistory.data.length + 1,\n    date: getDate(),\n    customer: customer.companyName,\n    quantity: number,\n    priceUnit: customer.price,\n    total: value,\n  }\n  updateAccountsReceivable(value)\n  updateInventory(number)\n  currData.invoiceHistory.data.push(invoiceHistory)\n}\n\nconst updateAccountsReceivable = (money) => {\n  currData.assets.accountsReceivable += money\n}\n\nconst updateInventory = (number) => {\n  currData.inventory.data[0].quantity -= number * 4\n  currData.inventory.data[1].quantity -= number\n}\n\nconst checkInventory = (number) => {\n  const inventoryData = currData.inventory.data\n  if (inventoryData[0].quantity * 4 >= number && inventoryData[0].quantity >= number) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const getInvoice = () => {\n  return currData.invoiceHistory.data\n}\n\n\n\n\n\n// PO\nexport const getPOHistory = () => {\n  return currData.POHistory.data\n}\n\nexport const creatPO = ({ id, number }) => {\n  const vendor = currData.vendors.data.find(vendor => vendor.id === id)\n  if (checkPO(number, vendor.priceUnit)) {\n    makePOByVenor(vendor, number)\n    updateLocal()\n  } else {\n    throw new Error('You do not have enough cash')\n  }\n}\n\nconst checkPO = (number, price) => {\n  if (number * price <= currData.assets.cash) {\n    return true\n  } else {\n    return false\n  }\n}\n\nconst makePOByVenor = (vendor, number) => {\n  const value = vendor.priceUnit * number\n  const POHistory = {\n    PONumber: currData.POHistory.data.length + 1,\n    date: getDate(),\n    supplier: vendor.companyName,\n    quantity: number,\n    priceUnit: vendor.priceUnit,\n    total: value,\n  }\n  updateAccountsPayable(value)\n  updateInventoryByPO(number)\n  currData.POHistory.data.push(POHistory)\n}\n\nconst updateAccountsPayable = (money) => {\n  currData.liabilites.accountsPayable += money\n}\n\nconst updateInventoryByPO = (number) => {\n  currData.inventory.data[0].quantity += number\n  currData.inventory.data[1].quantity += number\n}\n\n\n\n// income statement\nexport const getIncome = () => {\n  let sales = currData.assets.accountsReceivable\n  let COGS = calculateCOGS()\n  let grossProfit = sales - COGS\n\n  let payroll = currData.expenses.payroll\n  let payrollWithholding = currData.expenses.payrollWithholding\n  let bills = currData.expenses.bills\n  let annualExpenses = currData.expenses.annualExpenses\n  let totalExpenses = payroll + payrollWithholding + bills + annualExpenses\n\n  let otherIncome = currData.income.otherIncome\n  let operatingIncome = grossProfit - totalExpenses\n  let incomeTax = currData.income.incomeTax\n\n  let netIncome = operatingIncome - incomeTax\n\n  return {\n    sales: sales,\n    COGS: COGS,\n    grossProfit: grossProfit,\n\n    payroll: payroll,\n    payrollWithholding: payrollWithholding,\n    bills: bills,\n    annualExpenses: annualExpenses,\n    totalExpenses: totalExpenses,\n\n    otherIncome: otherIncome,\n    operatingIncome: operatingIncome,\n    incomeTax: incomeTax,\n    netIncome: netIncome\n  }\n}\n\nconst calculateCOGS = () => {\n  let COGS = 0\n  currData.invoiceHistory.data.forEach(invoice => {\n    COGS += invoice.quantity * (0.5 + 10)\n  })\n  return COGS\n}\n\n\n\n\n// balance sheet\nexport const getBalanceSheet = () => {\n  let cash = currData.assets.cash\n  let accountsReceivable = currData.assets.accountsReceivable\n  let inventory = getInventory().reduce((acc, cur) => acc + cur.value, 0)\n  // console.log(\"getBalanceSheet -> getInventory\", getInventory())\n  let totalCurrenAssets = cash + accountsReceivable + inventory\n\n  let land = currData.assets.buildings\n  let equipment = currData.assets.equipment\n  let furniture = currData.assets.furniture\n  let totalFixAssets = land + equipment + furniture\n\n  let totalAssets = totalCurrenAssets + totalFixAssets\n\n  let accountsPayable = currData.liabilites.accountsPayable\n  let notesPayable = currData.liabilites.notesPayable\n  let accruals = currData.liabilites.accruals\n  let totalCurrentLiabilities = accountsPayable + notesPayable + accruals\n\n  let mortage = 0\n  let totalLongTermDebt = 0\n\n  let totalLiabilities = totalCurrentLiabilities + totalLongTermDebt\n\n  let netWorth = totalAssets - totalLiabilities\n\n\n  return {\n    cash: cash,\n    accountsReceivable: accountsReceivable,\n    inventory: inventory,\n    totalCurrenAssets: totalCurrenAssets,\n\n    land: land,\n    equipment: equipment,\n    furniture: furniture,\n    totalFixAssets: totalFixAssets,\n\n    totalAssets: totalAssets,\n\n    accountsPayable: accountsPayable,\n    notesPayable: notesPayable,\n    accruals: accruals,\n    totalCurrentLiabilities: totalCurrentLiabilities,\n\n    mortage: mortage,\n    totalLongTermDebt: totalLongTermDebt,\n\n    totalLiabilities: totalLiabilities,\n\n    netWorth: netWorth,\n  }\n}\n\n","import React from 'react'\nimport { Table, Tag, Space } from 'antd';\n\n\nconst AntTable = (props) => {\n  return (\n    <Table columns={props.col} dataSource={props.data} />\n  )\n}\n\nexport default AntTable\n\n\n\n\n\n\n\n/*\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  \n  // {\n  //   title: 'Tags',\n  //   key: 'tags',\n  //   dataIndex: 'tags',\n  //   render: tags => (\n  //     <>\n  //       {tags.map(tag => {\n  //         let color = tag.length > 5 ? 'geekblue' : 'green';\n  //         if (tag === 'loser') {\n  //           color = 'volcano';\n  //         }\n  //         return (\n  //           <Tag color={color} key={tag}>\n  //             {tag.toUpperCase()}\n  //           </Tag>\n  //         );\n  //       })}\n  //     </>\n  //   ),\n  // },\n  // {\n  //   title: 'Action',\n  //   key: 'action',\n  //   render: (text, record) => (\n  //     <Space size=\"middle\">\n  //       <a>Invite {record.name}</a>\n  //       <a>Delete</a>\n  //     </Space>\n  //   ),\n  // },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\n\n*/","const mapTitle = {\n    companyName: \"Company Name\",\n    firstName: \"First Name\",\n    lastName: \"Last Name\",\n    address1: \"Address 1\",\n    address2: \"Address 2\",\n    city: \"City\",\n    salary: \"Salary\",\n    ssn: \"Social Security Number\",\n    state: \"State\",\n    withholding: \"Withholding\",\n    zipCode: \"ZIP Code\",\n    price: \"Price\",\n    // vendor\n    part: \"Part\",\n    priceUnit: \"Price/Unit ($)\",\n\n    // Pay\n    employee: \"Employee\",\n    dispusement: \"Dispusement\",\n    date: \"Date\",\n\n    // Inventory\n    quantity: 'Quantity',\n    steel: \"Steel\",\n    wood: \"Wood\",\n    value: \"Value ($)\",\n    total: \"Total ($)\",\n\n    // Invoice\n    customer: \"Customer\",\n    invoiceNumber: \"No.\",\n\n    // PO\n    PONumber: \"PO NO.\",\n    supplier: \"Supplier\",\n\n\n        \n}\n\nexport default mapTitle","import React, { useState, useEffect } from 'react'\nimport AntTable from '../Tables/AntTable'\n\nimport { getPayroll } from '../../utils/storage'\nimport mapTitle from '../../utils/mapTitle'\n\n\nfunction setCol(displayData) {\n    if (displayData.length === 0) return []\n    console.log(\"setCol -> Object.keys(displayData[0]).filter(cur => cur !== 'id')\", Object.keys(displayData[0]).filter(cur => cur !== 'id'))\n    return Object.keys(displayData[0]).filter(cur => cur !== 'id').map(cur => {\n        return {\n            title: mapTitle[cur],\n            dataIndex: cur,\n            key: cur,\n        }\n    })\n}\n\n\nconst CommonListComponent = function (props) {\n    const {getDisplayData, pageName} = props\n    const [displayData, setDisplayData] = useState([])\n    useEffect(() => {\n        setDisplayData(getDisplayData())\n    }, [])\n\n    const col = setCol(displayData)\n\n    return (\n        <div>\n            <h2/>\n            <h2>{pageName}</h2>\n            <AntTable data={displayData} col={col} />\n        </div>\n    )\n}\n\nexport default CommonListComponent","import React, { useState, useEffect } from 'react'\nimport { getEmployee } from '../../utils/storage'\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\n\n\n\nconst EmployeeList = function() {\n    const pageName = 'Employee List'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getEmployee}\n            pageName={pageName}\n        />\n    )\n}\n\nexport default EmployeeList","import React, { useRef } from 'react'\n\n\nimport { addEmployee } from '../../utils/storage'\nimport uniqid from 'uniqid'\n\n\nimport { Form, Input, InputNumber, Button } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst AntForm = () => {\n  const reset = useRef(null)\n  const onFinish = (values) => {\n    values.user.id = uniqid()\n\n    console.log(values);\n    addEmployee(values.user)\n    reset.current.resetFields()\n  };\n \n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} labelAlign='right' ref={reset}>\n      <Form.Item\n        name={['user', 'firstName']}\n        label=\"First Name\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={['user', 'lastName']}\n        label=\"Last Name\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'address1']}\n        label=\"Address 1\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'address2']}\n        label=\"Address 2\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'city']}\n        label=\"City\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'state']}\n        label=\"State\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'zipCode']}\n        label=\"Zip Code\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'ssn']}\n        label=\"Social Security Number(numbers only)\"\n        rules={[\n          {\n            type: 'string',\n            len: 9,\n            required: true,\n          },\n        ]}\n      >\n        <Input maxLength='9' />\n      </Form.Item>\n\n      <Form.Item \n        name={['user', 'withholding']} \n        label=\"Withholding\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}  \n      >\n        <Input />\n      </Form.Item>\n      <Form.Item \n        name={['user', 'salary']} \n        label=\"Salary (Dollars)\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}>\n        <Input type='number'/>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AntForm","import React from 'react'\nimport './EmployeeAdd.css'\n\nimport AntForm from '../../components/Forms/AntFormEmployee'\n\nconst EmployeeAdd = function () {\n\n    return (\n        <div className='centerBox'>\n            <AntForm />\n        </div>\n\n    )\n}\n\nexport default EmployeeAdd","import React, { useState, useEffect } from 'react'\nimport { getCustomers } from '../../utils/storage'\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\n\n\nconst CustomerList = function() {\n    const pageName = 'Customers List'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getCustomers}\n            pageName={pageName}\n        />\n    )\n}\n\nexport default CustomerList","import React, { useRef } from 'react'\n\n\nimport { addCustomer } from '../../utils/storage'\nimport uniqid from 'uniqid'\n\n\nimport { Form, Input, InputNumber, Button } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst AntForm = (props) => {\n  const reset = useRef(null)\n  const onFinish = (values) => {\n    values.user.id = uniqid()\n    console.log(values);\n    addCustomer(values.user)\n    reset.current.resetFields()\n  };\n\n\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} labelAlign='right' ref={reset}>\n      <Form.Item\n        name={['user', 'companyName']}\n        label=\"Company Name\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={['user', 'firstName']}\n        label=\"First Name\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={['user', 'lastName']}\n        label=\"Last Name\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'address1']}\n        label=\"Address 1\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'address2']}\n        label=\"Address 2\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'city']}\n        label=\"City\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'state']}\n        label=\"State\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'zipCode']}\n        label=\"Zip Code\"\n        rules={[\n          {\n            required: true,\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item name={['user', 'price']} label=\"Price\" \n        rules={[\n          {\n            required: true\n          }\n        ]}\n      >\n        <Input type='number'/>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AntForm","import React from 'react'\n\nimport AntForm from '../../components/Forms/AntFormCustomer'\n\nconst CustomerAdd = function () {\n\n    return (\n        <div className='centerBox'>\n            Add Customer\n            <AntForm />\n        </div>\n\n    )\n}\n\nexport default CustomerAdd","import React, { useState, useEffect } from 'react'\n\nimport { getVendors } from '../../utils/storage'\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\n\n\nconst VendorList = function () {\n    const pageName = 'Vendors List'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getVendors}\n            pageName={pageName}\n        />\n    )\n}\n\nexport default VendorList\n\n\n\n","import React, { useRef } from 'react'\n\n\nimport { addVendor, getInventory } from '../../utils/storage'\nimport uniqid from 'uniqid'\n// import mapTitle from '../../utils/mapTitle'\nimport mapTitle from '../../utils/mapTitle'\n\n\n\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst AntForm = (props) => {\n  const reset = useRef(null)\n  const onFinish = (values) => {\n    values.user.id = uniqid()\n    console.log(values);\n    addVendor(values.user)\n    reset.current.resetFields()\n  };\n\n  const inventory = getInventory()\n  const Options = inventory.map(inventory => {\n    return (\n      <Select.Option key={inventory.part} >{inventory.part}</Select.Option>\n    )\n  })\n\n  const formItems = props.items.map(item => {\n    if (item.name === 'priceUnit') {\n      return (\n        <Form.Item\n          name={['user', item.name]}\n          label={mapTitle[item.name]}\n          rules={[\n            {\n              required: true,\n            }\n          ]}\n        >\n          <Input type='number' />\n        </Form.Item>\n      )\n    }\n    else if (item.name === 'part') {\n      return (\n        <Form.Item\n          name={['user', 'part']}\n          label=\"Part\"\n          rules={[{ required: true }]}\n        >\n          <Select>\n            {Options}\n          </Select>\n        </Form.Item>\n\n      )\n    }\n    else {\n      return (\n        <Form.Item\n          name={['user', item.name]}\n          label={mapTitle[item.name]}\n          rules={[\n            {\n              required: true,\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      )\n    }\n  })\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} labelAlign='right' ref={reset}>\n\n      {formItems}\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AntForm","import React from 'react'\n\nimport AntForm from '../../components/Forms/AntFormVendor'\n\nconst VendorAdd = function () {\n    const arrayName = [\n        'companyName',\n        'part',\n        'priceUnit',\n        'address1',\n        'address2',\n        'city',\n        'state',\n        'zipCode',\n    ]\n\n    const generateItems = (arrayName) => {\n        return arrayName.map(name => {\n            return {\n                name: name\n            }\n        })\n    }\n\n    return (\n        <div className='centerBox'>\n            Add Vendor\n            <AntForm  items={generateItems(arrayName)}/>\n        </div>\n    )\n}\n\n\n\n\nexport default VendorAdd","import React, { useRef } from 'react'\n\n\nimport { payByID } from '../../utils/storage'\n\n\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst AntForm = (props) => {\n  const reset = useRef(null)\n  const onFinish = (values) => {\n    console.log(values);\n    payByID(values.user.id)\n    reset.current.resetFields()\n  };\n\n  const Options = props.employees.map(employee => {\n    return (\n      <Select.Option key={employee.id} value={employee.id}>{employee.firstName || null} {employee.lastName || null}</Select.Option>\n    )\n  })\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} labelAlign='right' ref={reset}>\n      <Form.Item \n        name={['user', 'id']}\n        label=\"Employees\">\n        <Select>\n          {Options}\n        </Select>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AntForm","import React from 'react'\n\nimport AntForm from '../../components/Forms/AntFormPayEmployee'\nimport { getEmployee } from '../../utils/storage'\n\nconst PayEmployee = function () {\n    const employee = getEmployee()\n    return (\n        <div className='centerBox'>\n            Pay Employee\n            <AntForm employees={employee} />\n        </div>\n\n    )\n}\n\nexport default PayEmployee","import React, { useState, useEffect } from 'react'\n\nimport { getPayroll } from '../../utils/storage'\n\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\nconst Payroll = function() {\n    const pageName = 'Payroll list'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getPayroll}\n            pageName={pageName}\n        />\n\n    )\n}\n\nexport default Payroll","import React, { useState, useEffect } from 'react'\n\nimport { getInventory } from '../../utils/storage'\n\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\nconst Inventory = function() {\n    const pageName = 'Inventory'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getInventory}\n            pageName={pageName}\n        />\n\n    )\n}\n\nexport default Inventory","import React, { useRef } from 'react'\n\n\nimport { payByID, creatInvoice } from '../../utils/storage'\n\n\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst AntForm = (props) => {\n  const reset = useRef(null)\n  const onFinish = (values) => {\n    console.log(values);\n    creatInvoice(values.user)\n    reset.current.resetFields()\n  };\n\n  const Options = props.cutomers.map(cutomer => {\n    return (\n      <Select.Option key={cutomer.id} value={cutomer.id}>{cutomer.firstName || null} {cutomer.lastName || null}</Select.Option>\n    )\n  })\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} labelAlign='right' ref={reset}>\n      <Form.Item\n        name={['user', 'id']}\n        label=\"Cutomers\"\n        rules={[{ required: true }]}\n      >\n        <Select>\n          {Options}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'number']}\n        label=\"Number of Unit to invoice\"\n        rules={[{ required: true }]}\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AntForm","import React from 'react'\n\nimport AntForm from '../../components/Forms/AntFormCreateInvoice'\nimport { getCustomers } from '../../utils/storage'\n\nconst CreatInvoice = function () {\n    const cutomers = getCustomers()\n\n\n    return (\n        <div className='centerBox'>\n            Creat Invoice\n            <AntForm cutomers={cutomers} />\n        </div>\n\n    )\n}\n\nexport default CreatInvoice","import React, { useState, useEffect } from 'react'\n\nimport { getInvoice } from '../../utils/storage'\n\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\nconst InvoiceHistory = function() {\n    const pageName = 'Invoice History'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getInvoice}\n            pageName={pageName}\n        />\n\n    )\n}\n\nexport default InvoiceHistory","import React, { useRef } from 'react'\n\n\nimport { creatPO } from '../../utils/storage'\n\n\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst AntForm = (props) => {\n  const reset = useRef(null)\n  const onFinish = (values) => {\n    console.log(values);\n    creatPO(values.user)\n    reset.current.resetFields()\n  };\n\n  const Options = props.vendors.map(vendors => {\n    return (\n      <Select.Option key={vendors.id} value={vendors.id}>{vendors.part}</Select.Option>\n    )\n  })\n\n  return (\n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages} labelAlign='right' ref={reset}>\n      <Form.Item\n        name={['user', 'id']}\n        label=\"Part\"\n        rules={[{ required: true }]}\n      >\n        <Select>\n          {Options}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        name={['user', 'number']}\n        label=\"Quantity\"\n        rules={[{ required: true }]}\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AntForm","import React from 'react'\n\nimport AntFormOfPO from '../../components/Forms/AntFormCreatePO'\nimport { getVendors } from '../../utils/storage'\n\nconst PO = function () {\n    const vendors = getVendors()\n\n\n    return (\n        <div className='centerBox'>\n            PO\n            <AntFormOfPO vendors={vendors} />\n        </div>\n\n    )\n}\n\nexport default PO","import React, { useState, useEffect } from 'react'\n\nimport { getPOHistory } from '../../utils/storage'\n\nimport CommonListComponent from '../../components/Common/CommonListComponent'\n\nconst POHistory = function() {\n    const pageName = 'PO History'\n\n    return(\n        <CommonListComponent\n            getDisplayData={getPOHistory}\n            pageName={pageName}\n        />\n\n    )\n}\n\nexport default POHistory","import React, { useState, useEffect } from 'react'\nimport './IncomeStatement.css'\nimport { Table, Typography } from 'antd';\nconst { Text } = Typography;\n\n\nfunction createColumns(title) {\n  const col =\n    [\n      {\n        title: title,\n        dataIndex: 'name',\n        render: text => text\n      },\n      {\n        title: 'Amount ($)',\n        className: 'column-money',\n        dataIndex: 'money',\n        align: 'right',\n      },\n    ];\n  return col\n}\n\n\n\nconst IncomeStatementTable = function (props) {\n  const { getDisplayData, pageName } = props\n  const [displayData, setDisplayData] = useState([])\n  useEffect(() => {\n    setDisplayData(getDisplayData())\n  }, [])\n\n\n  const data1 = [\n    {\n      key: '1',\n      name: 'Sales',\n      money: displayData.sales,\n    },\n    {\n      key: '2',\n      name: 'COGS',\n      money: displayData.COGS,\n    },\n    {\n      key: '3',\n      name: 'Gross Profit',\n      money: displayData.grossProfit,\n    },\n  ];\n\n  const data2 = [\n    {\n      key: '1',\n      name: 'Payroll',\n      money: displayData.payroll,\n    },\n    {\n      key: '2',\n      name: 'Payroll Withholding',\n      money: displayData.payrollWithholding,\n    },\n    {\n      key: '3',\n      name: 'Bills',\n      money: displayData.bills,\n    },\n    {\n      key: '4',\n      name: 'Annual Expenses',\n      money: displayData.annualExpenses,\n    },\n    {\n      key: '5',\n      name: 'Total Expenses',\n      money: displayData.totalExpenses,\n    },\n  ];\n\n  const data3 = [\n    {\n      key: '1',\n      name: 'Other Income',\n      money: displayData.otherIncome,\n    },\n    {\n      key: '2',\n      name: 'Operating Income',\n      money: displayData.operatingIncome,\n    },\n    {\n      key: '3',\n      name: 'Income Tax',\n      money: displayData.incomeTax,\n    },\n  ]\n\n  const data4 = [\n    {\n      key: '1',\n      name: 'Net Income',\n      money: displayData.netIncome,\n    },\n\n  ]\n\n\n  console.log(displayData)\n\n  return (\n    <div className='income-statement-container'>\n      <h2>{pageName}</h2>\n      <div className='income-statement'>\n\n        <Table\n          columns={createColumns('Sales')}\n          dataSource={data1}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Expenses')}\n          dataSource={data2}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Income')}\n          dataSource={data3}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Net Income')}\n          dataSource={data4}\n          pagination={false}\n          bordered\n        />\n\n      </div>\n    </div>\n  )\n}\n\nexport default IncomeStatementTable\n\n\n","import React, { useState, useEffect } from 'react'\n\nimport { getIncome } from '../../utils/storage'\n\nimport IncomeStatementTable from '../../components/Tables/IncomeStatementTable'\n\nconst IncomeStatement = function() {\n    const pageName = 'Income Statement'\n\n    return(\n        <IncomeStatementTable\n            getDisplayData={getIncome}\n            pageName={pageName}\n        />\n\n    )\n}\n\nexport default IncomeStatement","import React, { useState, useEffect } from 'react'\nimport './IncomeStatement.css'\nimport { Table, Typography } from 'antd';\nconst { Text } = Typography;\n\n\nfunction createColumns(title) {\n  const col =\n    [\n      {\n        title: title,\n        dataIndex: 'name',\n        render: text => text\n      },\n      {\n        title: 'Amount ($)',\n        className: 'column-money',\n        dataIndex: 'money',\n        align: 'right',\n      },\n    ];\n  return col\n}\n\n\n\nconst BalanceSheetTable = function (props) {\n  const { getDisplayData, pageName } = props\n  const [displayData, setDisplayData] = useState([])\n  useEffect(() => {\n    setDisplayData(getDisplayData())\n  }, [])\n\n  console.log(\"BalanceSheetTable -> displayData\", displayData)\n\n\n  const data1 = [\n    {\n      key: '1',\n      name: 'Cash',\n      money: displayData.cash,\n    },\n    {\n      key: '2',\n      name: 'Accounts Receivable',\n      money: displayData.accountsReceivable,\n    },\n    {\n      key: '3',\n      name: 'Inventory',\n      money: displayData.inventory,\n    },\n    {\n      key: '4',\n      name: 'Total Curren Assets',\n      money: displayData.totalCurrenAssets,\n    },\n  ];\n\n  const data2 = [\n    {\n      key: '1',\n      name: 'Land/Building',\n      money: displayData.land,\n    },\n    {\n      key: '2',\n      name: 'Equipment',\n      money: displayData.equipment,\n    },\n    {\n      key: '3',\n      name: 'Furniture',\n      money: displayData.furniture,\n    },\n    {\n      key: '4',\n      name: 'Total Fix Assets',\n      money: displayData.totalFixAssets,\n    },\n  ];\n\n  const data3 = [\n    {\n      key: '1',\n      name: 'Total Assets',\n      money: displayData.totalAssets,\n    },\n  ];\n\n  const data4 = [\n    {\n      key: '1',\n      name: 'Accounts Payable',\n      money: displayData.accountsPayable,\n    },\n    {\n      key: '2',\n      name: 'Notes Payable',\n      money: displayData.notesPayable,\n    },\n    {\n      key: '3',\n      name: 'Accruals',\n      money: displayData.accruals,\n    },\n    {\n      key: '4',\n      name: 'Total Current Liabilities',\n      money: displayData.totalCurrentLiabilities,\n    },\n  ]\n\n  const data5 = [\n    {\n      key: '1',\n      name: 'Mortage',\n      money: displayData.mortage,\n    },\n    {\n      key: '2',\n      name: 'Total Long Term Debt',\n      money: displayData.totalLongTermDebt,\n    },\n  ]\n\n  const data6 = [\n    {\n      key: '1',\n      name: 'Total Liabilities',\n      money: displayData.totalLiabilities,\n    },\n  ]\n\n  const data7 = [\n    {\n      key: '1',\n      name: 'Net Worth',\n      money: displayData.netWorth,\n    },\n  ]\n\n\n  console.log(displayData)\n\n  return (\n    <div className='income-statement-container'>\n      <h2>{pageName}</h2>\n      <div className='income-statement'>\n\n        <Table\n          columns={createColumns('Current Assets')}\n          dataSource={data1}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Fixed Assets')}\n          dataSource={data2}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Total Assets')}\n          dataSource={data3}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Current Liabilities')}\n          dataSource={data4}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Long Term Debt')}\n          dataSource={data5}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Total Liabilities')}\n          dataSource={data6}\n          pagination={false}\n          bordered\n        />\n\n        <br />\n        <Table\n          columns={createColumns('Net Worth')}\n          dataSource={data7}\n          pagination={false}\n          bordered\n        />\n\n      </div>\n    </div>\n  )\n}\n\nexport default BalanceSheetTable\n\n\n","import React, { useState, useEffect } from 'react'\n\nimport { getBalanceSheet } from '../../utils/storage'\n\nimport BalanceSheetTable from '../../components/Tables/BalanceSheetTable'\n\nconst BalanceSheet = function() {\n    const pageName = 'Balance Sheet'\n\n    return(\n        <BalanceSheetTable\n            getDisplayData={getBalanceSheet}\n            pageName={pageName}\n        />\n\n    )\n}\n\nexport default BalanceSheet","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport Siderbar from './layouts/Siderbar'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport * as RouterName from './routers/router'\n\nimport Home from './screens/home'\nimport EmployeeList from './screens/employees/EmployeeList'\nimport EmployeeAdd from './screens/employees/EmployeeAdd'\nimport CustomerList from './screens/customers/CustomerList'\nimport CustomerAdd from './screens/customers/CustomerAdd'\nimport VendorList from './screens/vendors/VendorList'\nimport VendorAdd from './screens/vendors/VendorAdd'\nimport PayEmployee from './screens/pay/PayEmployee'\nimport Payroll from './screens/pay/Payroll'\nimport Inventory from './screens/inventory/Inventory'\nimport Invoice from './screens/invoice/CreatInvoice'\nimport InvoiceHistory from './screens/invoice/InvoiceHistory'\nimport PO from './screens/purchase/PO'\nimport POHistory from './screens/purchase/POHistory'\nimport IncomeStatement from './screens/incomestatement/IncomeStatement'\nimport BalanceSheet from './screens/balanceSheet/BalanceSheet'\n\n\n\n\n\n\nimport { getDataFromLocal } from './utils/storage'\n\ngetDataFromLocal()\n\nfunction App() {\n\n\n  const currContents = (\n    <div>\n      <Route path={RouterName.Home} exact component={Home} />\n      <Route path={RouterName.EmployeeList} exact component={EmployeeList} />\n      <Route path={RouterName.EmployeeAdd} exact component={EmployeeAdd} />\n      <Route path={RouterName.CustomerList}  exact component={CustomerList} />\n      <Route path={RouterName.CustomerAdd}  exact component={CustomerAdd} />\n      <Route path={RouterName.VendorList}  exact component={VendorList} />\n      <Route path={RouterName.VendorAdd}  exact component={VendorAdd} />\n      <Route path={RouterName.PayEmployee}  exact component={PayEmployee} />\n      <Route path={RouterName.Payroll}  exact component={Payroll} />\n      <Route path={RouterName.Inventory}  exact component={Inventory} />\n      <Route path={RouterName.Invoice}  exact component={Invoice} />\n      <Route path={RouterName.InvoiceHistory}  exact component={InvoiceHistory} />\n      <Route path={RouterName.PO}  exact component={PO} />\n      <Route path={RouterName.POHistory}  exact component={POHistory} />\n      <Route path={RouterName.IncomeStatement}  exact component={IncomeStatement} />\n      <Route path={RouterName.BalanceSheet}  exact component={BalanceSheet} />\n\n\n    </div>\n  )\n\n\n\n  return (\n    <Siderbar\n      contents={currContents}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css'\n\nimport { BrowserRouter, Route, HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}